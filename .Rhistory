ifelse(training$BMI>22 & training$BMI<=25,3,
ifelse(training$BMI>25 & training$BMI<=30,4,5))))
training$BMI5 <- as.factor(training$BMI5)
mzmv$ALTER7 <- ifelse(mzmv$Age>=75, 7,
ifelse(mzmv$Age<75 & mzmv$Age>64,6,
ifelse(mzmv$Age<64 & mzmv$Age>55,5,
ifelse(mzmv$Age<55 & mzmv$Age>45,4,
ifelse(mzmv$Age<45 & mzmv$Age>34,3,
ifelse(mzmv$Age<34 & mzmv$Age>24,2,1))))))
mzmv$ALTER7 <- as.factor(mzmv$ALTER7)
mzmv$ALTER7 <- factor(mzmv$ALTER7, ordered = T, levels = levels(mzmv$ALTER7))
grouped <- training %>% group_by(ALTER7, Sex, BMI5, PASS) %>% dplyr::summarise(n=n())
grouped_n <- training %>% group_by(ALTER7, Sex, BMI5) %>% dplyr::summarise(n=n())
for (i in 1:nrow(grouped_n)){
print(i)
this <- grouped_n[i,1:3]
percReq <- grouped[grouped$ALTER7==this$ALTER7 & grouped$Sex==this$Sex & grouped$BMI5 == this$BMI5, ]
#Check PASS distribution in mzmv
mz <- mzmv[mzmv$Sex==this$Sex & mzmv$ALTER7==this$ALTER7 & mzmv$BMI5 == this$BMI5,]
MZgrouped <- mz %>% group_by(ALTER7, Sex, BMI5, PASS) %>% dplyr::summarise(n=n())
MZgrouped$percMZ <- MZgrouped$n/sum(MZgrouped$n)
percReq$ALTER7 <- as.numeric(percReq$ALTER7)
MZgrouped$ALTER7 <- as.numeric(MZgrouped$ALTER7)
percReq$PASS <- as.numeric(as.character(percReq$PASS))
MZgrouped$PASS <- as.numeric(as.character(MZgrouped$PASS))
percReq <- left_join(percReq, MZgrouped, by=c("ALTER7", "Sex", "BMI5", "PASS"))
percReq[is.na(percReq)] <- 0
percReq$Perc <- percReq$n.x/sum(percReq$n.x)
percReq$diff <- percReq$percMZ-percReq$Perc
finish=20
#Run it three times to ensure enough changes are made
while(finish!=0){
finish = finish-1
for(j in 10:1){
print(j)
percReq$Donors <- 0
thisDiff <- percReq[percReq$PASS==j,]$diff
if(length(thisDiff)!=0){
if(thisDiff<0.02){
goal <- floor(abs(thisDiff)*sum(percReq$n.y))
number <- 0
diff <- goal
k=j
switch=0
while(diff>0){
if(k != j){
if(length(percReq[percReq$PASS==k,]$n.y)!=0) {
percReq[percReq$PASS==k,]$Donors <- ifelse(percReq[percReq$PASS==k,]$n.y>0 & percReq[percReq$PASS==k,]$n.y<=diff,
percReq[percReq$PASS==k,]$n.y,
ifelse(percReq[percReq$PASS==k,]$n.y>0 & percReq[percReq$PASS==k,]$n.y>=goal,diff,0))
number <- number + percReq[percReq$PASS==k,]$Donors
diff <- goal-number
}
}
#Search in other direction if nothing is found
if(k==min(percReq$PASS) & goal>0){
k=j
switch=1
number <- 0
}
if(switch==0){
k=k-1
} else if(switch==1){
k=k+1
}
#With too little observations the loop never ends:
if(k>15){
diff=0
}
}
#Now randomly assign the donors to the new class:
donors <- percReq[percReq$Donors>0, ]
for (o in unique(donors$PASS)){
amount <- donors[donors$PASS==o, ]$Donors
#Assign the donors to new values
# mzmv[mzmv$Sex==this$Sex & mzmv$ALTER7==this$ALTER7 & mzmv$BMI5 == this$BMI5 & mzmv$PASS == o,][sample(nrow(mzmv[mzmv$Sex==this$Sex & mzmv$ALTER7==this$ALTER7 & mzmv$BMI5 == this$BMI5 & mzmv$PASS == o,]),amount), ]$PASS <- j
selection <-  mzmv[mzmv$Sex==this$Sex & mzmv$ALTER7==this$ALTER7 & mzmv$BMI5 == this$BMI5 & mzmv$PASS == o,]
selection <- selection[sample(1:nrow(selection),amount), ]
selection$PASS <- j
mzmv <- mzmv[!(mzmv$HHNR %in% selection$HHNR), ]
mzmv <- as.data.table(mzmv)
selection <- as.data.table(selection)
bind <- list(mzmv, selection)
mzmv <- rbindlist(bind)
mzmv <- as.data.frame(mzmv)
#Recalculate matrices
percReq <- grouped[grouped$ALTER7==this$ALTER7 & grouped$Sex==this$Sex & grouped$BMI5 == this$BMI5, ]
#Check PASS distribution in mzmv
mz <- mzmv[mzmv$Sex==this$Sex & mzmv$ALTER7==this$ALTER7 & mzmv$BMI5 == this$BMI5,]
MZgrouped <- mz %>% group_by(ALTER7, Sex, BMI5, PASS) %>% dplyr::summarise(n=n())
MZgrouped$percMZ <- MZgrouped$n/sum(MZgrouped$n)
percReq$ALTER7 <- as.numeric(percReq$ALTER7)
MZgrouped$ALTER7 <- as.numeric(MZgrouped$ALTER7)
percReq$PASS <- as.numeric(as.character(percReq$PASS))
MZgrouped$PASS <- as.numeric(as.character(MZgrouped$PASS))
percReq <- left_join(percReq, MZgrouped, by=c("ALTER7", "Sex", "BMI5", "PASS"))
percReq[is.na(percReq)] <- 0
percReq$Perc <- percReq$n.x/sum(percReq$n.x)
percReq$diff <- percReq$percMZ-percReq$Perc
}
#Now the same for the case of a positive difference (here we look from the bottom up)
}
}
}
}
}
hist(as.numeric(training$PASS))
hist(as.numeric(mzmv$PASS))
count(mzmv, duplicated(HHNR))
#NOW ADD Weight estimations
#__________________________________
mzmv$Weight <- zielpersonen$f81502
mzmv$Weight <- ifelse(mzmv$Weight<0,NA, mzmv$Weight)
pred1<-  mzmv[is.na(mzmv$Weight),-which(names(mzmv) %in% c("Weight"))]
mzmv$Weight <- zielpersonen$f81502
mzmv$Weight <- ifelse(mzmv$Weight<0,NA, mzmv$Weight)
pred1<-  mzmv[is.na(mzmv$Weight),-which(names(mzmv) %in% c("Weight"))]
pred <-  na.omit(pred1)
dt_model <- rand_forest(trees = 800, mtry=2, min_n = 200) %>% set_mode("classification")
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+SettlStruc+Education+
Sex+BMI,
data =training)
training <- left_join(training, tel[,c("IDNO", "TGEZU02")])
training$Weight <- training$TGEZU02
dt_model <- rand_forest(trees = 800, mtry=2, min_n = 200) %>% set_mode("classification")
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+SettlStruc+Education+
Sex+BMI,
data =training)
dt_model <- rand_forest(trees = 800, mtry=2, min_n = 200) %>% set_mode("regression")
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+SettlStruc+Education+
Sex+BMI,
data =training)
result1 <-
predict(model, pred)
Weight <- result1$.pred
missing <- mzmv[!(mzmv$HHNR %in% pred$HHNR), ]
View(mzmv)
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+
Sex+BMI,
data =training)
result2 <-
predict(model, missing)
training <- left_join(training, tel[,c("IDNO", "TGEZU02")])
training$Weight <- training$TGEZU02
dt_model <- rand_forest(trees = 800, mtry=2, min_n = 200) %>% set_mode("regression")
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+SettlStruc+Education+
Sex+BMI,
data =training)
mzmv$Weight <- zielpersonen$f81502
mzmv$Weight <- ifelse(mzmv$Weight<0,NA, mzmv$Weight)
pred1<-  mzmv[is.na(mzmv$Weight),-which(names(mzmv) %in% c("Weight"))]
pred <-  na.omit(pred1)
result1 <-
predict(model, pred)
pred$Weight <- result1$.pred
missing <- mzmv[!(mzmv$HHNR %in% pred$HHNR), ]
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+
Sex+BMI,
data =training)
result2 <-
predict(model, missing)
pred2 <- result2$.pred
missing$Weight <- pred
missing$Weight <- result2$.pred
View(missing)
nrow(missing)
nrow(missing)+nrow(pred)
missing <- mzmv[!(mzmv$HHNR %in% pred$HHNR), ]
View(missing)
missing <- missing[is.na(missing$Weight), ]
training <- left_join(training, tel[,c("IDNO", "TGEZU02")])
training$Weight <- training$TGEZU02
dt_model <- rand_forest(trees = 800, mtry=2, min_n = 200) %>% set_mode("regression")
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+SettlStruc+Education+
Sex+BMI,
data =training)
mzmv$Weight <- zielpersonen$f81502
mzmv$Weight <- ifelse(mzmv$Weight<0,NA, mzmv$Weight)
pred1<-  mzmv[is.na(mzmv$Weight),-which(names(mzmv) %in% c("Weight"))]
pred <-  na.omit(pred1)
result1 <-
predict(model, pred)
pred$Weight <- result1$.pred
missing <- mzmv[!(mzmv$HHNR %in% pred$HHNR), ]
missing <- missing[is.na(missing$Weight), ]
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+
Sex+BMI,
data =training)
result2 <-
predict(model, missing)
missing$Weight <- result2$.pred
allWeight <- rbind()
nrow(missing)+nrow(pred)
imputed <- rbind(missing, pred)
rest <- mzmv[!(mzmv$HHNR %in% imputed$HHNR), ]
all <- rbind(rest, imputed)
count(all, duplicated(HHNR))
hist(imputed$Weight)
hist(training$Weight)
hist(imputed$Weight)
hist(training$Weight)
dt_model <- nearest_neighbor() %>% set_mode("regression")
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+SettlStruc+Education+
Sex+BMI,
data =training)
mzmv$Weight <- zielpersonen$f81502
mzmv$Weight <- ifelse(mzmv$Weight<0,NA, mzmv$Weight)
pred1<-  mzmv[is.na(mzmv$Weight),-which(names(mzmv) %in% c("Weight"))]
pred <-  na.omit(pred1)
result1 <-
predict(model, pred)
pred$Weight <- result1$.pred
missing <- mzmv[!(mzmv$HHNR %in% pred$HHNR), ]
missing <- missing[is.na(missing$Weight), ]
model <- dt_model %>%  fit(Weight~log(Age)+Age+I(Age^2)+NationCateg+
Sex+BMI,
data =training)
result2 <-
predict(model, missing)
missing$Weight <- result2$.pred
allWeight <- rbind()
nrow(missing)+nrow(pred)
imputed <- rbind(missing, pred)
rest <- mzmv[!(mzmv$HHNR %in% imputed$HHNR), ]
all <- rbind(rest, imputed)
count(all, duplicated(HHNR))
hist(imputed$Weight)
hist(training$Weight)
hist(imputed$Weight)
hist(training$Weight)
descdist(imputed$Weight)
descdist(training$Weight)
descdist(imputed$Weight)
descdist(training$Weight)
View(all)
saveRDS(all, "C:\\Users\\LMF\\polybox\\BetwAcc_EBikeCity\\DATA\\mzmvEnrichedWithPASS_220418.rds")
rm(list = ls())
library(dplyr)
library(openxlsx)
etappen <- read.csv(unz("C:/Users/LMF/polybox/MZMV/MZMV2015_mit_Geo/4_DB_csv/CH_CSV.zip", "etappen.csv"))
zielpersonenEnriched <- readRDS("C:\\Users\\LMF\\polybox\\BetwAcc_EBikeCity\\DATA\\mzmvEnrichedWithPASS_220415.rds")
#-----Calculate the VO2max and power using formulas from Philips et al. 2018
#________________________________________________________________________________________________________________________________
zielpersonenEnriched$SexFormula <- ifelse(zielpersonenEnriched$Sex=="  1.Mann",1,ifelse(zielpersonenEnriched$Sex=="  2.Frau",0,NA))
zielpersonenEnriched$VO2max <- 57.402 -0.372*zielpersonenEnriched$Age+8.596*zielpersonenEnriched$SexFormula+1.396*as.numeric(zielpersonenEnriched$PASS)-0.683*zielpersonenEnriched$BMI
zielpersonenEnriched[zielpersonenEnriched$VO2max<10 & !is.na(zielpersonenEnriched$VO2max),]$VO2max <- 10
zielpersonenEnriched$O <- (zielpersonenEnriched$VO2max*zielpersonenEnriched$Weight)/10
zielpersonenEnriched$Weight
zielpersonenEnriched <- readRDS("C:\\Users\\LMF\\polybox\\BetwAcc_EBikeCity\\DATA\\mzmvEnrichedWithPASS_220418.rds")
zielpersonenEnriched$SexFormula <- ifelse(zielpersonenEnriched$Sex=="  1.Mann",1,ifelse(zielpersonenEnriched$Sex=="  2.Frau",0,NA))
zielpersonenEnriched$VO2max <- 57.402 -0.372*zielpersonenEnriched$Age+8.596*zielpersonenEnriched$SexFormula+1.396*as.numeric(zielpersonenEnriched$PASS)-0.683*zielpersonenEnriched$BMI
zielpersonenEnriched[zielpersonenEnriched$VO2max<10 & !is.na(zielpersonenEnriched$VO2max),]$VO2max <- 10
zielpersonenEnriched$O <- (zielpersonenEnriched$VO2max*zielpersonenEnriched$Weight)/10
zielpersonenEnriched$b <- zielpersonenEnriched$BMI*50/25
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek<=75, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<=75,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<180 & zielpersonenEnriched$FreiPhysActWeek>75, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek>=180, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$FreiPhysActWeek>=180,0.7,NA))))))
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS<=3, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<=3,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<5 & zielpersonenEnriched$PASS>3, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS>=5, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$PASS>=5,0.7,NA))))))
zielpersonenEnriched$a <- (zielpersonenEnriched$O*zielpersonenEnriched$l)
zielpersonenEnriched$W <- zielpersonenEnriched$a-zielpersonenEnriched$b
hist(zielpersonenEnriched$W)
#-----Calculate the VO2max and power using formulas from Philips et al. 2018
#________________________________________________________________________________________________________________________________
zielpersonenEnriched$BMI <- ifelse(zielpersonenEnriched$BMI>65, 65, zielpersonenEnriched$BMI)
zielpersonenEnriched$SexFormula <- ifelse(zielpersonenEnriched$Sex=="  1.Mann",1,ifelse(zielpersonenEnriched$Sex=="  2.Frau",0,NA))
zielpersonenEnriched$VO2max <- 57.402 -0.372*zielpersonenEnriched$Age+8.596*zielpersonenEnriched$SexFormula+1.396*as.numeric(zielpersonenEnriched$PASS)-0.683*zielpersonenEnriched$BMI
zielpersonenEnriched[zielpersonenEnriched$VO2max<10 & !is.na(zielpersonenEnriched$VO2max),]$VO2max <- 10
zielpersonenEnriched$O <- (zielpersonenEnriched$VO2max*zielpersonenEnriched$Weight)/10
zielpersonenEnriched$b <- zielpersonenEnriched$BMI*50/25
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek<=75, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<=75,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<180 & zielpersonenEnriched$FreiPhysActWeek>75, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek>=180, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$FreiPhysActWeek>=180,0.7,NA))))))
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS<=3, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<=3,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<5 & zielpersonenEnriched$PASS>3, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS>=5, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$PASS>=5,0.7,NA))))))
zielpersonenEnriched$a <- (zielpersonenEnriched$O*zielpersonenEnriched$l)
zielpersonenEnriched$W <- zielpersonenEnriched$a-zielpersonenEnriched$b
hist(zielpersonenEnriched$W)
hist(zielpersonenEnriched$W, 50)
summary(zielpersonenEnriched$W)
summary(zielpersonenEnriched$BMI)
summary(zielpersonenEnriched$Weight)
zielpersonenEnriched$Weight <- ifelse(zielpersonenEnriched$Weight<30, 30, zielpersonenEnriched$Weight)
zielpersonenEnriched$BMI <- ifelse(zielpersonenEnriched$BMI<10, 10, zielpersonenEnriched$BMI)
zielpersonenEnriched$Weight <- ifelse(zielpersonenEnriched$Weight<30, 30, zielpersonenEnriched$Weight)
zielpersonenEnriched$SexFormula <- ifelse(zielpersonenEnriched$Sex=="  1.Mann",1,ifelse(zielpersonenEnriched$Sex=="  2.Frau",0,NA))
zielpersonenEnriched$VO2max <- 57.402 -0.372*zielpersonenEnriched$Age+8.596*zielpersonenEnriched$SexFormula+1.396*as.numeric(zielpersonenEnriched$PASS)-0.683*zielpersonenEnriched$BMI
zielpersonenEnriched[zielpersonenEnriched$VO2max<10 & !is.na(zielpersonenEnriched$VO2max),]$VO2max <- 10
zielpersonenEnriched$O <- (zielpersonenEnriched$VO2max*zielpersonenEnriched$Weight)/10
zielpersonenEnriched$b <- zielpersonenEnriched$BMI*50/25
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek<=75, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<=75,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<180 & zielpersonenEnriched$FreiPhysActWeek>75, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek>=180, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$FreiPhysActWeek>=180,0.7,NA))))))
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS<=3, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<=3,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<5 & zielpersonenEnriched$PASS>3, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS>=5, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$PASS>=5,0.7,NA))))))
zielpersonenEnriched$a <- (zielpersonenEnriched$O*zielpersonenEnriched$l)
zielpersonenEnriched$W <- zielpersonenEnriched$a-zielpersonenEnriched$b
hist(zielpersonenEnriched$W, 50)
summary(zielpersonenEnriched$W)
View(zielpersonenEnriched)
zielpersonenEnriched$PASS <- as.numeric(zielpersonenEnriched$PASS)
zielpersonenEnriched$VO2max <- 57.402 -0.372*zielpersonenEnriched$Age+8.596*zielpersonenEnriched$SexFormula+1.396*as.numeric(zielpersonenEnriched$PASS)-0.683*zielpersonenEnriched$BMI
zielpersonenEnriched[zielpersonenEnriched$VO2max<10 & !is.na(zielpersonenEnriched$VO2max),]$VO2max <- 10
zielpersonenEnriched$O <- (zielpersonenEnriched$VO2max*zielpersonenEnriched$Weight)/10
zielpersonenEnriched$b <- zielpersonenEnriched$BMI*50/25
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek<=75, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<=75,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<180 & zielpersonenEnriched$FreiPhysActWeek>75, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek>=180, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$FreiPhysActWeek>=180,0.7,NA))))))
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS<=3, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<=3,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<5 & zielpersonenEnriched$PASS>3, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS>=5, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$PASS>=5,0.7,NA))))))
zielpersonenEnriched$a <- (zielpersonenEnriched$O*zielpersonenEnriched$l)
zielpersonenEnriched$W <- zielpersonenEnriched$a-zielpersonenEnriched$b
hist(zielpersonenEnriched$W, 50)
summary(zielpersonenEnriched$W)
zielpersonenEnriched$W_est <- zielpersonenEnriched$W
zielpersonenEnriched$W_final <- ifelse(zielpersonenEnriched$W_est<20,NA,zielpersonenEnriched$W_est)
summary(zielpersonenEnriched$W_final)
hist(zielpersonenEnriched$W_final)
hist(zielpersonenEnriched$W_final, 50)
count(zielpersonenEnriched, is.na(W_final))
zielpersonenEnriched$W_final <- ifelse(zielpersonenEnriched$W_est<30,NA,zielpersonenEnriched$W_est)
summary(zielpersonenEnriched$W_final)
hist(zielpersonenEnriched$W_final, 50)
count(zielpersonenEnriched, is.na(W_final))
#NOW PREPARE ROUTING DATASET
#________________________________________________________________________________________________________________________________
persRouting <- zielpersonenEnriched[!is.na(zielpersonenEnriched$W_final), ]
etappenR <- etappen[etappen$HHNR %in% persRouting$HHNR, ]
etappenR <- left_join(etappenR, persRouting, by="HHNR")
etappenR$S_X
etappenR$S_Y
startLat <- etappenR[1,]$startLat
startLon <- etappenR[1,]$startLon
endLat <- etappenR[1,]$endLat
endLon <- etappenR[1,]$endLon
brouterPath <-"C:\\Users\\LMF\\polybox\\BetwAcc_EBikeCity\\brouter-1.6.3\\brouter-1.6.3"
setServers(pathToBRouter = brouterPath)
startServers(pathToBRouter = brouterPath)
route <- brouterR::calculateRoute(startLat = startLat,
startLon = startLon,
endLat=endLat,
endLon=endLon,
profile="Trekking-FCR-dry",
outputFormat="linestring")
#TESTING
#________________________________________________________________________________________________________________________________
# require(devtools)
# install_github("https://github.com/ivt-baug-ethz/brouterR")
library(brouterR)
etappenR[1,]$startLat
etappenR$startLat <- etappenR$S_Y
etappenR$startLon <- etappenR$S_X
etappenR$endLat <- etappenR$Z_Y
etappenR$endLon <- etappenR$Z_X
etappenR[1,]$startLat
startLat <- etappenR[1,]$startLat
startLon <- etappenR[1,]$startLon
endLat <- etappenR[1,]$endLat
endLon <- etappenR[1,]$endLon
brouterPath <-"C:\\Users\\LMF\\polybox\\BetwAcc_EBikeCity\\brouter-1.6.3\\brouter-1.6.3"
setServers(pathToBRouter = brouterPath)
route <- brouterR::calculateRoute(startLat = startLat,
startLon = startLon,
endLat=endLat,
endLon=endLon,
profile="Trekking-FCR-dry",
outputFormat="linestring")
brouterR::plotRoute(route)
etappenR$bikerPower <- etappenR$W_final
rm(list = ls())
library(dplyr)
library(openxlsx)
etappen <- read.csv(unz("C:/Users/LMF/polybox/MZMV/MZMV2015_mit_Geo/4_DB_csv/CH_CSV.zip", "etappen.csv"))
zielpersonenEnriched <- readRDS("C:\\Users\\LMF\\polybox\\BetwAcc_EBikeCity\\DATA\\mzmvEnrichedWithPASS_220418.rds")
#-----Calculate the VO2max and power using formulas from Philips et al. 2018
#________________________________________________________________________________________________________________________________
zielpersonenEnriched$BMI <- ifelse(zielpersonenEnriched$BMI>65, 65, zielpersonenEnriched$BMI)
zielpersonenEnriched$BMI <- ifelse(zielpersonenEnriched$BMI<10, 10, zielpersonenEnriched$BMI)
zielpersonenEnriched$Weight <- ifelse(zielpersonenEnriched$Weight<30, 30, zielpersonenEnriched$Weight)
zielpersonenEnriched$SexFormula <- ifelse(zielpersonenEnriched$Sex=="  1.Mann",1,ifelse(zielpersonenEnriched$Sex=="  2.Frau",0,NA))
zielpersonenEnriched$PASS <- as.numeric(zielpersonenEnriched$PASS)
zielpersonenEnriched$VO2max <- 57.402 -0.372*zielpersonenEnriched$Age+8.596*zielpersonenEnriched$SexFormula+1.396*as.numeric(zielpersonenEnriched$PASS)-0.683*zielpersonenEnriched$BMI
zielpersonenEnriched[zielpersonenEnriched$VO2max<10 & !is.na(zielpersonenEnriched$VO2max),]$VO2max <- 10
zielpersonenEnriched$O <- (zielpersonenEnriched$VO2max*zielpersonenEnriched$Weight)/10
zielpersonenEnriched$b <- zielpersonenEnriched$BMI*50/25
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek<=75, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<=75,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$FreiPhysActWeek<180 & zielpersonenEnriched$FreiPhysActWeek>75, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$FreiPhysActWeek>=180, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$FreiPhysActWeek>=180,0.7,NA))))))
zielpersonenEnriched$l <- ifelse(zielpersonenEnriched$BMI<19 | zielpersonenEnriched$BMI>30, 0.48,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS<=3, 0.55,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<=3,0.55,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>19) & zielpersonenEnriched$PASS<5 & zielpersonenEnriched$PASS>3, 0.6,
ifelse((zielpersonenEnriched$BMI<=30 & zielpersonenEnriched$BMI>25) & zielpersonenEnriched$PASS>=5, 0.6,
ifelse((zielpersonenEnriched$BMI<=25 & zielpersonenEnriched$BMI>=19) & zielpersonenEnriched$PASS>=5,0.7,NA))))))
zielpersonenEnriched$a <- (zielpersonenEnriched$O*zielpersonenEnriched$l)
zielpersonenEnriched$W <- zielpersonenEnriched$a-zielpersonenEnriched$b
zielpersonenEnriched$W_est <- zielpersonenEnriched$W
zielpersonenEnriched$W_final <- ifelse(zielpersonenEnriched$W_est<30,NA,zielpersonenEnriched$W_est)
summary(zielpersonenEnriched$W_final)
hist(zielpersonenEnriched$W_final, 50)
count(zielpersonenEnriched, is.na(W_final))
#NOW PREPARE ROUTING DATASET
#________________________________________________________________________________________________________________________________
persRouting <- zielpersonenEnriched[!is.na(zielpersonenEnriched$W_final), ]
etappenR <- etappen[etappen$HHNR %in% persRouting$HHNR, ]
etappenR <- left_join(etappenR, persRouting, by="HHNR")
etappenR$startLat <- etappenR$S_Y
etappenR$startLon <- etappenR$S_X
etappenR$endLat <- etappenR$Z_Y
etappenR$endLon <- etappenR$Z_X
#------
#1-Conventional bike routing
etappenR$bikerPower <- etappenR$W_final
etappenR$totalMass <- etappenR$Weight+15
etappenR$maxSpeed <- 35
etappenR$id <- paste(etappenR$HHNR, etappenR$WEGNR, etappenR$ETNR, sep="_")
library(brouterR)
install_github("https://github.com/ivt-baug-ethz/brouterR")
require(devtools)
install_github("https://github.com/ivt-baug-ethz/brouterR")
devtools::check()
devtools::check()
devtools::document()
#-----
install.packages("plotKML")
#-----
remove.packages("plotKML")
devtools::check
devtools::check()
rlang::last_error()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
Imports:
doParallel,
doSNOW,
itertools,
parallel,
plotKML,
RCurl,
sp,
sf,
stringr,
leaflet
usethis::use_package("doParallel")
usethis::use_package("doSNOW")
usethis::use_package("parallel")
usethis::use_package("plotKML")
usethis::use_package("sp")
usethis::use_package("sf")
usethis::use_package("stringr")
usethis::use_package("leaflet")
devtools::document()
devtools::check()
usethis::use_package("plotKML")
devtools::check()
usethis::use_package("plotKML")
library(plotKML)
update.packages("rlang")
library(plotKML)
update.packages(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(plotKML)
packageVersion("rlang")
update.packages("rlang")
packageVersion("rlang")
install.packages("rlang")
packageVersion("rlang")
library(plotKML)
devtools::document()
devtools::check()
require(devtools)
install_github("https://github.com/ivt-baug-ethz/brouterR")
